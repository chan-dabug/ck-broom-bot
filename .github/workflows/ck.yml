name: ck sweep
on:
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * 1" # Mondays at 5 AM

jobs:
  sweep:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for better git operations
      
      - uses: actions/setup-node@v4
        with: 
          node-version: "20"
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
      
      - name: Run ck scan and cleanup
        env:
          MONGODB_URI: ${{ secrets.CK_MONGODB_URI }}
          CK_DB: ${{ secrets.CK_DB || 'ck' }}
        run: |
          echo "üîç Starting ck dead code scan..."
          npx ck scan --entry src/index.tsx --apply --confidence 0.9
          echo "‚úÖ ck scan completed"
      
      - name: Check for changes
        id: check_changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "üìù Changes detected, creating PR..."
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "‚ú® No changes detected"
          fi
      
      - name: Create Pull Request
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config user.name "ck-bot"
          git config user.email "ck-bot@users.noreply.github.com"
          
          # Create branch name
          BRANCH_NAME="ck/sweep-$(date +%Y%m%d-%H%M%S)"
          echo "Creating branch: $BRANCH_NAME"
          
          git checkout -b "$BRANCH_NAME"
          git add -A
          git commit -m "ck: sweep dead code [skip ci]"
          git push -u origin "$BRANCH_NAME"
          
          # Create PR using GitHub CLI
          gh pr create \
            --title "üßπ ck: sweep dead code" \
            --body "This PR was automatically created by ck to remove archived dead code.

## What was cleaned up?
- Unreachable files that are no longer imported
- Unused exports, functions, methods, and variables
- All removed code has been archived to MongoDB for potential restoration

## Safety
- Only code with high confidence (>90%) was removed
- All removed code is safely archived
- Run with `--report` flag to see what would be removed without applying changes

## Commands
- View archived items: `ck list`
- Restore specific item: `ck restore <id> --output path/to/file`
- Re-run scan: `ck scan --entry src/index.tsx --report`

---
*Generated by ck v0.1.0*" \
            --base main \
            --head "$BRANCH_NAME" \
            --label "automated,cleanup,dead-code"
      
      - name: Comment on PR
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          PR_NUMBER=$(gh pr list --head "$BRANCH_NAME" --json number --jq '.[0].number')
          if [ -n "$PR_NUMBER" ]; then
            gh pr comment "$PR_NUMBER" --body "ü§ñ **ck bot here!** 

I've completed the dead code sweep and created this PR. Here's what happened:

- **Files analyzed**: All TypeScript/JavaScript files in src/
- **Confidence threshold**: 90%
- **Archived items**: All removed code is safely stored in MongoDB
- **Safety**: Only high-confidence dead code was removed

You can review the changes and merge if everything looks good. If you need to restore any removed code, use:
\`\`\`bash
ck restore <archive_id> --output path/to/restore
\`\`\`

Questions? Check the [ck documentation](https://github.com/your-username/ck#readme) or open an issue!"
          fi
      
      - name: Success message
        if: steps.check_changes.outputs.has_changes == 'false'
        run: |
          echo "üéâ No dead code found! Your codebase is already clean."
      
      - name: Failure notification
        if: failure()
        run: |
          echo "‚ùå ck sweep failed. Check the logs for details."
          echo "You can run the scan manually with: npx ck scan --entry src/index.tsx --report"
